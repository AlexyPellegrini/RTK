if(RTK_USE_CUDA)
  itk_wrap_include(itkCudaImage.h)
endif()

#-----------------------------------------------------------------------------
# rtk::ConstantImageSource
#-----------------------------------------------------------------------------
itk_wrap_class("rtk::ConstantImageSource" POINTER)

  itk_wrap_image_filter("${WRAP_ITK_REAL}" 1)
  itk_wrap_image_filter("${WRAP_ITK_VECTOR_REAL}" 1)

  if(RTK_USE_CUDA)
    foreach(d ${ITK_WRAP_IMAGE_DIMS})
      foreach(t ${WRAP_ITK_REAL})
        itk_wrap_template("CI${ITKM_${t}}${d}" "itk::CudaImage<${ITKT_${t}}, ${d}>")
      endforeach()
    endforeach()
  endif()

itk_end_wrap_class()

if(RTK_USE_CUDA)
  #-----------------------------------------------------------------------------
  # Templates to be used with rtk::CudaConstantImageSource
  #-----------------------------------------------------------------------------
  itk_wrap_class("itk::CudaImageToImageFilter" POINTER)
    itk_wrap_template("CIF3CIF3CteISrcCIF3" "itk::CudaImage<${ITKT_F}, 3>, itk::CudaImage<${ITKT_F}, 3>, rtk::ConstantImageSource< itk::CudaImage<${ITKT_F}, 3> >")
  itk_end_wrap_class()
endif()

# ---------------------------------------------------------------------------
# Wrap itk::ContinuousIndex missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::ContinuousIndex")

  # Wrap ITK double missing types
  if (NOT ITK_WRAP_double)
    itk_wrap_template("D1" "${ITKT_D}, 1")
  endif()

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    if (ITK_WRAP_double)
      itk_wrap_template("D1" "double, 1")
    endif()
  endif()

itk_end_wrap_class()

# ---------------------------------------------------------------------------
# Wrap itk::Point missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::Point")

  # Wrap ITK double missing types
  if (NOT ITK_WRAP_double)
    itk_wrap_template("D1" "${ITKT_D}, 1")
  endif()

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    if (ITK_WRAP_double)
      itk_wrap_template("D1" "double, 1")
    endif()
  endif()

itk_end_wrap_class()

# ---------------------------------------------------------------------------
# Wrap itk::ImageBase missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::ImageBase" POINTER)

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("1" "1")
  endif()

itk_end_wrap_class()

# ---------------------------------------------------------------------------
# Wrap itk::Image missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::Image" POINTER)

  # Wrap ITK double missing types
  if (NOT ITK_WRAP_double)
    itk_wrap_template("D1" "${ITKT_D}, 1")
  endif()

  # Wrap ITK unsigned char missing types
  if (NOT ITK_WRAP_unsigned_char)
    itk_wrap_template("UC1" "${ITKT_UC}, 1")
  endif()

  # Wrap ITK unsigned short missing types
  if (NOT ITK_WRAP_unsigned_short)
    itk_wrap_template("US2" "${ITKT_US}, 2")
    itk_wrap_template("US3" "${ITKT_US}, 3")
    itk_wrap_template("US4" "${ITKT_US}, 4")
  endif()

  # Wrap ITK short combination (required by : rtkLookupTableImageFilter)
  if (NOT ITK_WRAP_signed_short)
    itk_wrap_template("SS3" "${ITKT_SS}, 3")
  endif()

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("F1" "${ITKT_F}, 1")
	if (ITK_WRAP_double)
      itk_wrap_template("D1" "${ITKT_D}, 1")
    endif()
	if (ITK_WRAP_unsigned_char)
      itk_wrap_template("UC1" "${ITKT_UC}, 1")
    endif()
  endif()

  # Wrap ITK dimension 4 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "4" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("F4" "${ITKT_F}, 4")
    itk_wrap_template("${ITKM_VF3}4" "${ITKT_VF3}, 4") #rtkCyclicDeformationImageFilter
    itk_wrap_template("${ITKM_CVF3}4" "${ITKT_CVF3}, 4") #rtkMotionCompensatedFourDConjugateGradientConeBeamReconstructionFilter
    if (ITK_WRAP_unsigned_short)
      itk_wrap_template("US4" "${ITKT_US}, 4")
    endif()
  endif()

itk_end_wrap_class()

# ----------------------------------------------------------------------------
# Wrap CUDA base classes. Required by the wrapped class following this block
# ----------------------------------------------------------------------------
if(RTK_USE_CUDA)

  #----------------------------------------------------------
  itk_wrap_class("itk::CudaImage" POINTER_WITH_CONST_POINTER)

    list(FIND ITK_WRAP_IMAGE_DIMS "4" _index)
    if (${_index} EQUAL -1)
      itk_wrap_template("F4" "${ITKT_F}, 4")
    endif()

    itk_wrap_template("${ITKM_CVF3}4" "${ITKT_CVF3}, 4")

  itk_end_wrap_class()

  #----------------------------------------------------------
  itk_wrap_class("itk::CudaImageDataManager" POINTER)

    list(FIND ITK_WRAP_IMAGE_DIMS "4" _index)
    if(${_index} EQUAL -1)
        itk_wrap_template("CIF4" "itk::CudaImage<${ITKT_F}, 4>")
    endif()

    itk_wrap_template("CICVF34" "itk::CudaImage<itk::CovariantVector<${ITKT_F}, 3>, 4>")

  itk_end_wrap_class()
endif()

# ---------------------------------------------------------------------------
# Wrap itk::ImageSource missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::ImageSource" POINTER)

  # Wrap ITK double missing types
  if (NOT ITK_WRAP_double)
    itk_wrap_template("ID1" "itk::Image<${ITKT_D}, 1>")
    itk_wrap_template("ID2" "itk::Image<${ITKT_D}, 2>")
    itk_wrap_template("ID3" "itk::Image<${ITKT_D}, 3>")
  endif()

  # Wrap ITK unsigned char missing types
  if (NOT ITK_WRAP_unsigned_char)
    itk_wrap_template("IUC1" "itk::Image<${ITKT_UC}, 1>")
  endif()

  # Wrap ITK unsigned short missing types
  if (NOT ITK_WRAP_unsigned_short)
    itk_wrap_template("IUS2" "itk::Image<${ITKT_US}, 2>")
    itk_wrap_template("IUS3" "itk::Image<${ITKT_US}, 3>")
  endif()

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("IF1" "itk::Image<${ITKT_F}, 1>")
	if (ITK_WRAP_double)
      itk_wrap_template("ID1" "itk::Image<${ITKT_D}, 1>")
    endif()
	if (ITK_WRAP_unsigned_char)
      itk_wrap_template("IUC1" "itk::Image<${ITKT_UC}, 1>")
    endif()
  endif()

  # Wrap ITK dimension 4 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "4" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("IF4" "itk::Image<${ITKT_F}, 4>")
    if(RTK_USE_CUDA)
      itk_wrap_template("CIF4" "itk::CudaImage<${ITKT_F}, 4>")
    endif()
  endif()

  # Wrap CUDA types
  if(RTK_USE_CUDA)
    foreach(d ${ITK_WRAP_IMAGE_DIMS})
      foreach(t ${WRAP_ITK_REAL})
        itk_wrap_template("CI${ITKM_${t}}${d}" "itk::CudaImage<${ITKT_${t}}, ${d}>")
      endforeach()
    endforeach()
  endif()

itk_end_wrap_class()

# ---------------------------------------------------------------------------
# Wrap itk::ImageToImageFilter missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::ImageToImageFilter" POINTER)

  # Wrap ITK double missing types --
  if (NOT ITK_WRAP_double)
    itk_wrap_template("ID1ID1" "itk::Image<${ITKT_D}, 1>, itk::Image<${ITKT_D}, 1>")
	itk_wrap_template("ID3ID2" "itk::Image<${ITKT_D}, 3>, itk::Image<${ITKT_D}, 2>")
  endif()

  # Wrap ITK unsigned short missing types
  if (NOT ITK_WRAP_unsigned_short)
    itk_wrap_template("IUS2IUS2" "itk::Image<${ITKT_US}, 2>, itk::Image<${ITKT_US}, 2>")
    itk_wrap_template("IUS3IUS3" "itk::Image<${ITKT_US}, 3>, itk::Image<${ITKT_US}, 3>")
  endif()

  # Wrap ITK unsigned short combination (required by : rtkLookupTableImageFilter)
  if (NOT ITK_WRAP_unsigned_short)
    if (NOT ITK_WRAP_double)
      itk_wrap_template("IUS3ID3" "itk::Image<${ITKT_US}, 3>, itk::Image<${ITKT_D}, 3>")
    endif()
    itk_wrap_template("IUS4IF4" "itk::Image<${ITKT_US}, 4>, itk::Image<${ITKT_F}, 4>")
    itk_wrap_template("IUS3IF3" "itk::Image<${ITKT_US}, 3>, itk::Image<${ITKT_F}, 3>")
    itk_wrap_template("IUS2IF2" "itk::Image<${ITKT_US}, 2>, itk::Image<${ITKT_F}, 2>")
  endif()

  # Wrap ITK short combination (required by : rtkLookupTableImageFilter)
  if (NOT ITK_WRAP_signed_short)
    itk_wrap_template("ISS3IF3" "itk::Image<${ITKT_SS}, 3>, itk::Image<${ITKT_F}, 3>")
  endif()

  # Wrap ITK CovariantVector missing types
  if (NOT ITK_WRAP_covariant_vector_double)
    itk_wrap_template("ICVD33ICVD33" "itk::Image<itk::CovariantVector<${ITKT_D}, 3>, 3>, itk::Image<itk::CovariantVector<${ITKT_D}, 3>, 3>")
  endif()

  # Wrap ITK real type combination
  itk_wrap_template("IF3ID2" "itk::Image<${ITKT_F}, 3>, itk::Image<${ITKT_D}, 2>")

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("IF1IF1" "itk::Image<${ITKT_F}, 1>, itk::Image<${ITKT_F}, 1>")
	if (ITK_WRAP_double)
      itk_wrap_template("ID1ID1" "itk::Image<${ITKT_D}, 1>, itk::Image<${ITKT_D}, 1>")
    endif()
  endif()

  # Wrap ITK dimension 4 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "4" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("IF4IF3" "itk::Image<${ITKT_F}, 4>, itk::Image<${ITKT_F}, 3>")
    itk_wrap_template("IF4IF4" "itk::Image<${ITKT_F}, 4>, itk::Image<${ITKT_F}, 4>")
  endif()

  if(RTK_USE_CUDA)
    foreach(d ${ITK_WRAP_IMAGE_DIMS})
      foreach(t ${WRAP_ITK_REAL})
        itk_wrap_template("CI${ITKM_${t}}${d}CI${ITKM_${t}}${d}"
          "itk::CudaImage<${ITKT_${t}}, ${d}>, itk::CudaImage<${ITKT_${t}}, ${d}>")
      endforeach()
    endforeach()

    # Wrap ITK dimension 4 missing types
    list(FIND ITK_WRAP_IMAGE_DIMS "4" _index)
    if (${_index} EQUAL -1)
      itk_wrap_template("CIF4CIF4" "itk::CudaImage<${ITKT_F}, 4>, itk::CudaImage<${ITKT_F}, 4>")
    endif()
  endif()
itk_end_wrap_class()

# ---------------------------------------------------------------------------
# Wrap itk::InPlaceImageFilter missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::InPlaceImageFilter" POINTER)

  # Wrap ITK double missing types --
  if (NOT ITK_WRAP_double)
    itk_wrap_template("ID1ID1" "itk::Image<${ITKT_D}, 1>, itk::Image<${ITKT_D}, 1>")
	itk_wrap_template("ID3ID2" "itk::Image<${ITKT_D}, 3>, itk::Image<${ITKT_D}, 2>")
  endif()

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    itk_wrap_template("IF1IF1" "itk::Image<${ITKT_F}, 1>, itk::Image<${ITKT_F}, 1>")
	if (ITK_WRAP_double)
      itk_wrap_template("ID1ID1" "itk::Image<${ITKT_D}, 1>, itk::Image<${ITKT_D}, 1>")
    endif()
  endif()

  # Wrap ITK unsigned short missing types
  if (NOT ITK_WRAP_unsigned_short)
    itk_wrap_template("IUS3IUS3" "itk::Image<${ITKT_US}, 3>, itk::Image<${ITKT_US}, 3>")
  endif()

  # Wrap ITK unsigned short combination (required by : rtkLookupTableImageFilter)
  if (NOT ITK_WRAP_unsigned_short)
    if (NOT ITK_WRAP_double)
      itk_wrap_template("IUS3ID3" "itk::Image<${ITKT_US}, 3>, itk::Image<${ITKT_D}, 3>")
    endif()
    itk_wrap_template("IUS4IF4" "itk::Image<${ITKT_US}, 4>, itk::Image<${ITKT_F}, 4>")
    itk_wrap_template("IUS3IF3" "itk::Image<${ITKT_US}, 3>, itk::Image<${ITKT_F}, 3>")
    itk_wrap_template("IUS2IF2" "itk::Image<${ITKT_US}, 2>, itk::Image<${ITKT_F}, 2>")
  endif()

  # Wrap ITK short combination (required by : rtkLookupTableImageFilter)
  if (NOT ITK_WRAP_signed_short)
    itk_wrap_template("ISS3IF3" "itk::Image<${ITKT_SS}, 3>, itk::Image<${ITKT_F}, 3>")
  endif()

  # Wrap ITK real type combination
  itk_wrap_template("IF3ID2" "itk::Image<${ITKT_F}, 3>, itk::Image<${ITKT_D}, 2>")

  if(RTK_USE_CUDA)
    # Wrap ITK dimension 4 CUDA missing types
    list(FIND ITK_WRAP_IMAGE_DIMS "4" _index)
    if (${_index} EQUAL -1)
      itk_wrap_template("CIF4CIF4" "itk::CudaImage<${ITKT_F}, 4>, itk::CudaImage<${ITKT_F}, 4>")
    endif()
  endif()

itk_end_wrap_class()

# ---------------------------------------------------------------------------
# Wrap itk::Matrix missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::Matrix")

  # Wrap ITK double missing types --
  if (NOT ITK_WRAP_double)
    itk_wrap_template("D11" "${ITKT_D}, 1, 1")
  endif()

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
	if (ITK_WRAP_double)
      itk_wrap_template("D11" "${ITKT_D}, 1, 1")
    endif()
  endif()

itk_end_wrap_class()

# ---------------------------------------------------------------------------
# Wrap itk::CovariantVector missing types
# ---------------------------------------------------------------------------
itk_wrap_class("itk::CovariantVector")

  # Wrap ITK double missing types
  if (NOT ITK_WRAP_double)
    itk_wrap_template("D1" "${ITKT_D}, 1")
  endif()

  # Wrap ITK dimension 1 missing types
  list(FIND ITK_WRAP_IMAGE_DIMS "1" _index)
  if (${_index} EQUAL -1)
    if (ITK_WRAP_double)
      itk_wrap_template("D1" "double, 1")
    endif()
  endif()

itk_end_wrap_class()

# ---------------------------------------------------------------------------
# Wrap const missing types
# ---------------------------------------------------------------------------
itk_wrap_simple_type_swig_interface("itk::Image< float, 2 >::ConstPointer" "itkImageF2_ConstPointer")
itk_wrap_simple_type("itk::Image< float, 2 >::ConstPointer" "itkImageF2_ConstPointer")

itk_wrap_simple_type_swig_interface("itk::Image< float, 3 >::ConstPointer" "itkImageF3_ConstPointer")
itk_wrap_simple_type("itk::Image< float, 3 >::ConstPointer" "itkImageF3_ConstPointer")

itk_wrap_simple_type_swig_interface("itk::Image< float, 4 >::ConstPointer" "itkImageF4_ConstPointer")
itk_wrap_simple_type("itk::Image< float, 4 >::ConstPointer" "itkImageF4_ConstPointer")

itk_wrap_simple_type_swig_interface("itk::VectorImage< float, 2 >::ConstPointer" "itkVectorImageF2_ConstPointer")
itk_wrap_simple_type("itk::VectorImage< float, 2 >::ConstPointer" "itkVectorImageF2_ConstPointer")

itk_wrap_simple_type_swig_interface("itk::VectorImage< float, 3 >::ConstPointer" "itkVectorImageF3_ConstPointer")
itk_wrap_simple_type("itk::VectorImage< float, 3 >::ConstPointer" "itkVectorImageF3_ConstPointer")

itk_wrap_simple_type_swig_interface("itk::Image< itk::CovariantVector< float, 3 >, 4 >::ConstPointer" "itkImageCVF34_ConstPointer")
itk_wrap_simple_type("itk::Image< itk::CovariantVector< float, 3 >, 4 >::ConstPointer" "itkImageCVF34_ConstPointer")

if (ITK_WRAP_double)
  itk_wrap_simple_type_swig_interface("itk::Image< double, 3 >::ConstPointer" "itkImageD3_ConstPointer")
  itk_wrap_simple_type("itk::Image< double, 3 >::ConstPointer" "itkImageD3_ConstPointer")

  itk_wrap_simple_type_swig_interface("itk::Image< double, 4 >::ConstPointer" "itkImageD4_ConstPointer")
  itk_wrap_simple_type("itk::Image< double, 4 >::ConstPointer" "itkImageD4_ConstPointer")

  itk_wrap_simple_type_swig_interface("itk::VectorImage< double, 3 >::ConstPointer" "itkVectorImageD3_ConstPointer")
  itk_wrap_simple_type("itk::VectorImage< double, 3 >::ConstPointer" "itkVectorImageD3_ConstPointer")

  itk_wrap_simple_type_swig_interface("itk::Image< itk::CovariantVector< double, 3 >, 4 >::ConstPointer" "itkImageCVD34_ConstPointer")
  itk_wrap_simple_type("itk::Image< itk::CovariantVector< double, 3 >, 4 >::ConstPointer" "itkImageCVD34_ConstPointer")
endif()
