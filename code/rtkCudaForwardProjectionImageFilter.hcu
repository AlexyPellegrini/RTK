/*=========================================================================
 *
 *  Copyright RTK Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0.txt
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *=========================================================================*/

#ifndef __rtkCudaForwardProjectionImageFilter_hcu
#define __rtkCudaForwardProjectionImageFilter_hcu

enum ProjectionType {
  ORIGINAL,
  PRIMARY,
  COMPTON,
  RAYLEIGH,
  FLUORESCENCE
  };

struct CudaAccumulationParameters
  {
  ProjectionType projectionType;
  int matSize;

  // primary
  float* energyWeights;

  // primary and compton
  int energySize;
  float* mu;

  // compton
  float energy_spacing;
  float direction[3];
  float invWlPhoton;
  float e0m;
  float eRadiusOverCrossSectionTerm;
  float energy;
  float detectorOrientationTimesPixelSurface[3];
  };

void
CUDA_forward_project( int projections_size[2],
                      int vol_size[3],
                      float matrix[12],
                      float *dev_proj,
                      float *dev_vol,
                      float t_step,
                      double source_position[3],
                      float box_min[3],
                      float box_max[3],
                      float spacing[3],
                      CudaAccumulationParameters* params);

#endif
