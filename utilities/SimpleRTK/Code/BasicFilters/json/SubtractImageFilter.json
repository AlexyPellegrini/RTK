{
  "name" : "SubtractImageFilter",
  "itk_name" : "SubtractImageFilter",
  "template_code_filename" : "BinaryFunctorFilter",
  "template_test_filename" : "ImageFilter",
  "constant_type" : "double",
  "number_of_inputs" : 2,
  "doc" : "Some global documentation",
  "pixel_types" : "NonLabelPixelIDTypeList",
  "members" : [],
  "briefdescription" : "Pixel-wise subtraction of two images.",
  "detaileddescription" : "Subtract each pixel from image2 from its corresponding pixel in image1:\n\n\\code\n*Output=Input1-Input2.\n*\n\\endcode\n\n\nThis is done using\n\n\\code\n* SetInput1(image1);\n* SetInput2(image2);\n*\n\\endcode\n\n\nThis class is templated over the types of the two input images and the type of the output image. Numeric conversions (castings) are done by the C++ defaults.\n\nAdditionally, a constant can be subtracted from every pixel in an image using:\n\n\\code\n* SetInput1(image1);\n* SetConstant2(constant);\n*\n\\endcode\n\n\n\\note The result of AddImageFilterwith a negative constant is not necessarily the same as SubtractImageFilter. This would be the case when the PixelType defines an operator-()that is not the inverse of operator+()\n\n\\par Wiki Examples:\n\n\\li All Examples\n\n\\li Subtract two images\n\n\\li Subtract a constant from every pixel in an image"
}
